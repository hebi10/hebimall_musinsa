const { getFirestore, collection, doc, getDoc, getDocs } = require('firebase/firestore');
const { initializeApp } = require('firebase/app');

// ÌôòÍ≤ΩÎ≥ÄÏàò Î°úÎìú
require('dotenv').config({ path: '.env.local' });

// Firebase ÏÑ§Ï†ï
const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function listAllCategories() {
  console.log('üìã Î™®Îì† Ïπ¥ÌÖåÍ≥†Î¶¨ Î™©Î°ù Ï°∞Ìöå...\n');
  
  try {
    const categoriesSnapshot = await getDocs(collection(db, 'categories'));
    
    console.log(`Ï¥ù ${categoriesSnapshot.size}Í∞ú Ïπ¥ÌÖåÍ≥†Î¶¨:`);
    
    for (const categoryDoc of categoriesSnapshot.docs) {
      const categoryId = categoryDoc.id;
      const categoryData = categoryDoc.data();
      
      try {
        const productsSnapshot = await getDocs(collection(db, 'categories', categoryId, 'products'));
        
        
        // Ïπ¥ÌÖåÍ≥†Î¶¨ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ ÌëúÏãú
        if (categoryData && Object.keys(categoryData).length > 0) {
          console.log(`   Îç∞Ïù¥ÌÑ∞: ${JSON.stringify(categoryData, null, 2)}`);
        }
        
        // Ï≤´ Î≤àÏß∏ ÏÉÅÌíà Î™á Í∞ú ÏÉòÌîå ÌëúÏãú
        if (productsSnapshot.size > 0) {
          const sampleProducts = productsSnapshot.docs.slice(0, 3);
          sampleProducts.forEach((doc, index) => {
            const data = doc.data();
          });
          if (productsSnapshot.size > 3) {
            console.log(`   ... Ïô∏ ${productsSnapshot.size - 3}Í∞ú`);
          }
        }
        
      } catch (error) {
        console.log(`   ‚ö†Ô∏è ${categoryId} Ï°∞Ìöå Ïã§Ìå®: ${error.message}`);
      }
      
      console.log(''); // Îπà Ï§Ñ
    }
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error);
  }
}

listAllCategories().catch(console.error);
